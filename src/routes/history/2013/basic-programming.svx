---
slug: basic-programming
year: 2013
type: secondary
hasDetail: true
title: BASIC 言語でプログラミングに入門した
modifiedAt: 2024-04-23
---

<script>
  import { ExternalLink } from '~/components';
</script>

DSi 上で BASIC 言語プログラミングができるソフト「プチコンmk-Ⅱ (ニンテンドー DSi ウェア)」がきっかけでプログラミングに夢中になりました。
手軽にボタン操作・タッチ操作を検知でき、それに応じたグラフィック・スプライトの処理を記述して横スクロールゲームの開発に挑戦したりしました。

(参考記事) <ExternalLink url="https://game.watch.impress.co.jp/docs/news/516623.html" label="スマイルブーム、DSiウェア「プチコンmkII」。3DSやDSiでプログラム言語「BASIC」が楽しめる、シリーズ第2弾 - GAME Watch" />

BASIC 言語はシンプルな手続き型言語なので、`@` でラベルを設定してその行にジャンプする GOTO 命令を駆使してループを発生させ、
その内側で「今ボタンが押されているか」を判定し、押されていればループから脱出する、
といった命令を実行することでボタン押下に反応するプログラムを作ることができました。
ループ中のグラフィック処理が多いと描画途中の画面がチラついて見えてしまう問題が発生するため、
仮想的な描画領域(バッファ)に描画しておいてそれが完了してから現在の画面と取り替える「ダブルバッファリング」の技術をプチコン愛好家の掲示板で学びました。
この経験が、大学進学後 Vulkan に入門したときに「スワップチェイン」の理解の助けになりました。

中学時代はちょうどスマホが普及し始めた時期でしたが、僕の場合中学のあいだはスマホを買ってもらえず、
クラスメイトのことを羨ましく思っていました。特に iOS 7 の UI デザインにはかなり魅力を感じていて、
この見た目・アニメーションを手元のプチコン(DSi)で再現できないか試行錯誤して、「スマホOSもどき」プログラムを作って遊んでいました。
タッチ操作のできる下画面をスマホの画面に見立てて、アプリアイコンの並んだホーム画面とホームボタンらしきものを描画させて、
タッチ操作を検知してアプリが起動しているような画面に遷移させたりしていました。
